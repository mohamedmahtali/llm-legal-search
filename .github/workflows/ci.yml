name: CI - Build and Test AI Legal Search Project

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build & Test backend / frontend / scraper
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
          xpack.security.transport.ssl.enabled: "false"
          xpack.security.http.ssl.enabled: "false"
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl --fail http://localhost:9200/_cluster/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build backend
      - name: Build Backend image
        run: docker build -t mylegalsearch-backend ./backend

      # Build frontend
      - name: Build Frontend image
        run: docker build -t mylegalsearch-frontend ./frontend

      # Build scraper
      - name: Build Scraper image
        run: docker build -t mylegalsearch-scraper ./scraper

      # Wait for Elasticsearch to be ready
      - name: Wait for Elasticsearch
        run: |
          echo "Waiting for Elasticsearch to be ready..."
          for i in {1..10}; do
            curl --fail http://localhost:9200/_cluster/health && break || sleep 5
          done

      # Run Backend container (test)
      - name: Run Backend container for test
        run: |
          docker run -d --name backend-test --network="host" mylegalsearch-backend
          sleep 10  # give backend time to start

      # Test API endpoint /search (basic test)
      - name: Test /search endpoint
        run: |
          curl --fail http://localhost:8000/search?q=test || (docker logs backend-test && exit 1)

      # Stop container
      - name: Cleanup containers
        run: |
          docker stop backend-test
          docker rm backend-test
